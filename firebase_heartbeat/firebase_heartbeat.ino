#include <ESP8266WiFi.h>
#include <FirebaseArduino.h>
#include "IRremoteESP8266.h"
#include <ESP8266WiFi.h>
#include <Ticker.h>
#include <Wire.h>  // Only needed for Arduino 1.6.5 and earlier
#include "SSD1306.h"
//#include "main.cpp"
int RECV_PIN = D4;


// Created by http://oleddisplay.squix.ch/ Consider a donation
// In case of problems make sure that you are using the font file with the correct version!
const char Roboto_16[] PROGMEM = {
  0x0F, // Width: 15
  0x13, // Height: 19
  0x20, // First Char: 32
  0xE0, // Numbers of Chars: 224

  // Jump Table:
  0xFF, 0xFF, 0x00, 0x04,  // 32:65535
  0x00, 0x00, 0x05, 0x03,  // 33:0
  0x00, 0x05, 0x0A, 0x05,  // 34:5
  0x00, 0x0F, 0x1C, 0x0B,  // 35:15
  0x00, 0x2B, 0x17, 0x09,  // 36:43
  0x00, 0x42, 0x20, 0x0C,  // 37:66
  0x00, 0x62, 0x1A, 0x0A,  // 38:98
  0x00, 0x7C, 0x04, 0x03,  // 39:124
  0x00, 0x80, 0x0D, 0x05,  // 40:128
  0x00, 0x8D, 0x0B, 0x05,  // 41:141
  0x00, 0x98, 0x10, 0x07,  // 42:152
  0x00, 0xA8, 0x1A, 0x0A,  // 43:168
  0x00, 0xC2, 0x05, 0x03,  // 44:194
  0x00, 0xC7, 0x0E, 0x06,  // 45:199
  0x00, 0xD5, 0x08, 0x04,  // 46:213
  0x00, 0xDD, 0x10, 0x07,  // 47:221
  0x00, 0xED, 0x17, 0x09,  // 48:237
  0x01, 0x04, 0x0E, 0x08,  // 49:260
  0x01, 0x12, 0x17, 0x09,  // 50:274
  0x01, 0x29, 0x17, 0x09,  // 51:297
  0x01, 0x40, 0x1A, 0x0A,  // 52:320
  0x01, 0x5A, 0x17, 0x09,  // 53:346
  0x01, 0x71, 0x17, 0x09,  // 54:369
  0x01, 0x88, 0x19, 0x0A,  // 55:392
  0x01, 0xA1, 0x17, 0x09,  // 56:417
  0x01, 0xB8, 0x17, 0x09,  // 57:440
  0x01, 0xCF, 0x08, 0x04,  // 58:463
  0x01, 0xD7, 0x08, 0x04,  // 59:471
  0x01, 0xDF, 0x17, 0x09,  // 60:479
  0x01, 0xF6, 0x17, 0x09,  // 61:502
  0x02, 0x0D, 0x17, 0x08,  // 62:525
  0x02, 0x24, 0x13, 0x08,  // 63:548
  0x02, 0x37, 0x29, 0x0F,  // 64:567
  0x02, 0x60, 0x1D, 0x0A,  // 65:608
  0x02, 0x7D, 0x17, 0x09,  // 66:637
  0x02, 0x94, 0x1A, 0x0A,  // 67:660
  0x02, 0xAE, 0x1A, 0x0A,  // 68:686
  0x02, 0xC8, 0x17, 0x08,  // 69:712
  0x02, 0xDF, 0x16, 0x08,  // 70:735
  0x02, 0xF5, 0x1D, 0x0B,  // 71:757
  0x03, 0x12, 0x1A, 0x0A,  // 72:786
  0x03, 0x2C, 0x05, 0x03,  // 73:812
  0x03, 0x31, 0x17, 0x09,  // 74:817
  0x03, 0x48, 0x1A, 0x09,  // 75:840
  0x03, 0x62, 0x14, 0x08,  // 76:866
  0x03, 0x76, 0x23, 0x0D,  // 77:886
  0x03, 0x99, 0x1A, 0x0A,  // 78:921
  0x03, 0xB3, 0x1D, 0x0B,  // 79:947
  0x03, 0xD0, 0x19, 0x0A,  // 80:976
  0x03, 0xE9, 0x1E, 0x0B,  // 81:1001
  0x04, 0x07, 0x1A, 0x0A,  // 82:1031
  0x04, 0x21, 0x1A, 0x0A,  // 83:1057
  0x04, 0x3B, 0x1C, 0x0B,  // 84:1083
  0x04, 0x57, 0x1A, 0x0A,  // 85:1111
  0x04, 0x71, 0x1C, 0x0A,  // 86:1137
  0x04, 0x8D, 0x28, 0x0E,  // 87:1165
  0x04, 0xB5, 0x1A, 0x0A,  // 88:1205
  0x04, 0xCF, 0x19, 0x09,  // 89:1231
  0x04, 0xE8, 0x1A, 0x0A,  // 90:1256
  0x05, 0x02, 0x0C, 0x04,  // 91:1282
  0x05, 0x0E, 0x11, 0x07,  // 92:1294
  0x05, 0x1F, 0x09, 0x04,  // 93:1311
  0x05, 0x28, 0x11, 0x07,  // 94:1320
  0x05, 0x39, 0x17, 0x09,  // 95:1337
  0x05, 0x50, 0x0A, 0x05,  // 96:1360
  0x05, 0x5A, 0x14, 0x08,  // 97:1370
  0x05, 0x6E, 0x17, 0x09,  // 98:1390
  0x05, 0x85, 0x17, 0x09,  // 99:1413
  0x05, 0x9C, 0x17, 0x09,  // 100:1436
  0x05, 0xB3, 0x17, 0x09,  // 101:1459
  0x05, 0xCA, 0x10, 0x07,  // 102:1482
  0x05, 0xDA, 0x17, 0x09,  // 103:1498
  0x05, 0xF1, 0x14, 0x08,  // 104:1521
  0x06, 0x05, 0x05, 0x03,  // 105:1541
  0x06, 0x0A, 0x06, 0x03,  // 106:1546
  0x06, 0x10, 0x14, 0x08,  // 107:1552
  0x06, 0x24, 0x05, 0x03,  // 108:1572
  0x06, 0x29, 0x23, 0x0D,  // 109:1577
  0x06, 0x4C, 0x14, 0x08,  // 110:1612
  0x06, 0x60, 0x17, 0x09,  // 111:1632
  0x06, 0x77, 0x17, 0x09,  // 112:1655
  0x06, 0x8E, 0x18, 0x09,  // 113:1678
  0x06, 0xA6, 0x0D, 0x05,  // 114:1702
  0x06, 0xB3, 0x14, 0x08,  // 115:1715
  0x06, 0xC7, 0x11, 0x07,  // 116:1735
  0x06, 0xD8, 0x14, 0x08,  // 117:1752
  0x06, 0xEC, 0x14, 0x08,  // 118:1772
  0x07, 0x00, 0x22, 0x0C,  // 119:1792
  0x07, 0x22, 0x14, 0x08,  // 120:1826
  0x07, 0x36, 0x16, 0x08,  // 121:1846
  0x07, 0x4C, 0x17, 0x09,  // 122:1868
  0x07, 0x63, 0x0F, 0x05,  // 123:1891
  0x07, 0x72, 0x06, 0x03,  // 124:1906
  0x07, 0x78, 0x0E, 0x06,  // 125:1912
  0x07, 0x86, 0x1D, 0x0B,  // 126:1926
  0x07, 0xA3, 0x11, 0x07,  // 127:1955
  0x07, 0xB4, 0x11, 0x07,  // 128:1972
  0x07, 0xC5, 0x11, 0x07,  // 129:1989
  0x07, 0xD6, 0x11, 0x07,  // 130:2006
  0x07, 0xE7, 0x11, 0x07,  // 131:2023
  0x07, 0xF8, 0x11, 0x07,  // 132:2040
  0x08, 0x09, 0x11, 0x07,  // 133:2057
  0x08, 0x1A, 0x11, 0x07,  // 134:2074
  0x08, 0x2B, 0x11, 0x07,  // 135:2091
  0x08, 0x3C, 0x11, 0x07,  // 136:2108
  0x08, 0x4D, 0x11, 0x07,  // 137:2125
  0x08, 0x5E, 0x11, 0x07,  // 138:2142
  0x08, 0x6F, 0x11, 0x07,  // 139:2159
  0x08, 0x80, 0x11, 0x07,  // 140:2176
  0x08, 0x91, 0x11, 0x07,  // 141:2193
  0x08, 0xA2, 0x11, 0x07,  // 142:2210
  0x08, 0xB3, 0x11, 0x07,  // 143:2227
  0x08, 0xC4, 0x11, 0x07,  // 144:2244
  0x08, 0xD5, 0x11, 0x07,  // 145:2261
  0x08, 0xE6, 0x11, 0x07,  // 146:2278
  0x08, 0xF7, 0x11, 0x07,  // 147:2295
  0x09, 0x08, 0x11, 0x07,  // 148:2312
  0x09, 0x19, 0x11, 0x07,  // 149:2329
  0x09, 0x2A, 0x11, 0x07,  // 150:2346
  0x09, 0x3B, 0x11, 0x07,  // 151:2363
  0x09, 0x4C, 0x11, 0x07,  // 152:2380
  0x09, 0x5D, 0x11, 0x07,  // 153:2397
  0x09, 0x6E, 0x11, 0x07,  // 154:2414
  0x09, 0x7F, 0x11, 0x07,  // 155:2431
  0x09, 0x90, 0x11, 0x07,  // 156:2448
  0x09, 0xA1, 0x11, 0x07,  // 157:2465
  0x09, 0xB2, 0x11, 0x07,  // 158:2482
  0x09, 0xC3, 0x11, 0x07,  // 159:2499
  0xFF, 0xFF, 0x00, 0x04,  // 160:65535
  0x09, 0xD4, 0x06, 0x03,  // 161:2516
  0x09, 0xDA, 0x17, 0x09,  // 162:2522
  0x09, 0xF1, 0x1A, 0x0A,  // 163:2545
  0x0A, 0x0B, 0x1D, 0x0B,  // 164:2571
  0x0A, 0x28, 0x19, 0x09,  // 165:2600
  0x0A, 0x41, 0x06, 0x03,  // 166:2625
  0x0A, 0x47, 0x1B, 0x0A,  // 167:2631
  0x0A, 0x62, 0x10, 0x07,  // 168:2658
  0x0A, 0x72, 0x23, 0x0D,  // 169:2674
  0x0A, 0x95, 0x11, 0x07,  // 170:2709
  0x0A, 0xA6, 0x14, 0x08,  // 171:2726
  0x0A, 0xBA, 0x14, 0x08,  // 172:2746
  0x0A, 0xCE, 0x0E, 0x06,  // 173:2766
  0x0A, 0xDC, 0x23, 0x0D,  // 174:2780
  0x0A, 0xFF, 0x13, 0x08,  // 175:2815
  0x0B, 0x12, 0x0D, 0x06,  // 176:2834
  0x0B, 0x1F, 0x17, 0x09,  // 177:2847
  0x0B, 0x36, 0x11, 0x07,  // 178:2870
  0x0B, 0x47, 0x0E, 0x06,  // 179:2887
  0x0B, 0x55, 0x0A, 0x05,  // 180:2901
  0x0B, 0x5F, 0x14, 0x08,  // 181:2911
  0x0B, 0x73, 0x11, 0x07,  // 182:2931
  0x0B, 0x84, 0x08, 0x04,  // 183:2948
  0x0B, 0x8C, 0x09, 0x04,  // 184:2956
  0x0B, 0x95, 0x08, 0x05,  // 185:2965
  0x0B, 0x9D, 0x10, 0x07,  // 186:2973
  0x0B, 0xAD, 0x11, 0x07,  // 187:2989
  0x0B, 0xBE, 0x20, 0x0C,  // 188:3006
  0x0B, 0xDE, 0x20, 0x0C,  // 189:3038
  0x0B, 0xFE, 0x23, 0x0D,  // 190:3070
  0x0C, 0x21, 0x15, 0x08,  // 191:3105
  0x0C, 0x36, 0x1D, 0x0A,  // 192:3126
  0x0C, 0x53, 0x1D, 0x0A,  // 193:3155
  0x0C, 0x70, 0x1D, 0x0B,  // 194:3184
  0x0C, 0x8D, 0x1D, 0x0A,  // 195:3213
  0x0C, 0xAA, 0x1D, 0x0B,  // 196:3242
  0x0C, 0xC7, 0x1D, 0x0B,  // 197:3271
  0x0C, 0xE4, 0x2C, 0x0F,  // 198:3300
  0x0D, 0x10, 0x1D, 0x0A,  // 199:3344
  0x0D, 0x2D, 0x17, 0x08,  // 200:3373
  0x0D, 0x44, 0x17, 0x08,  // 201:3396
  0x0D, 0x5B, 0x17, 0x09,  // 202:3419
  0x0D, 0x72, 0x17, 0x09,  // 203:3442
  0x0D, 0x89, 0x05, 0x03,  // 204:3465
  0x0D, 0x8E, 0x07, 0x03,  // 205:3470
  0x0D, 0x95, 0x0D, 0x05,  // 206:3477
  0x0D, 0xA2, 0x0D, 0x05,  // 207:3490
  0x0D, 0xAF, 0x1D, 0x0B,  // 208:3503
  0x0D, 0xCC, 0x1A, 0x0A,  // 209:3532
  0x0D, 0xE6, 0x1D, 0x0B,  // 210:3558
  0x0E, 0x03, 0x1D, 0x0B,  // 211:3587
  0x0E, 0x20, 0x1D, 0x0B,  // 212:3616
  0x0E, 0x3D, 0x1D, 0x0B,  // 213:3645
  0x0E, 0x5A, 0x1D, 0x0B,  // 214:3674
  0x0E, 0x77, 0x17, 0x09,  // 215:3703
  0x0E, 0x8E, 0x1D, 0x0B,  // 216:3726
  0x0E, 0xAB, 0x1A, 0x0A,  // 217:3755
  0x0E, 0xC5, 0x1A, 0x0A,  // 218:3781
  0x0E, 0xDF, 0x1A, 0x0A,  // 219:3807
  0x0E, 0xF9, 0x1A, 0x0A,  // 220:3833
  0x0F, 0x13, 0x19, 0x09,  // 221:3859
  0x0F, 0x2C, 0x17, 0x09,  // 222:3884
  0x0F, 0x43, 0x1A, 0x0A,  // 223:3907
  0x0F, 0x5D, 0x14, 0x08,  // 224:3933
  0x0F, 0x71, 0x14, 0x08,  // 225:3953
  0x0F, 0x85, 0x14, 0x08,  // 226:3973
  0x0F, 0x99, 0x14, 0x08,  // 227:3993
  0x0F, 0xAD, 0x14, 0x08,  // 228:4013
  0x0F, 0xC1, 0x14, 0x08,  // 229:4033
  0x0F, 0xD5, 0x26, 0x0E,  // 230:4053
  0x0F, 0xFB, 0x17, 0x09,  // 231:4091
  0x10, 0x12, 0x17, 0x09,  // 232:4114
  0x10, 0x29, 0x17, 0x09,  // 233:4137
  0x10, 0x40, 0x17, 0x09,  // 234:4160
  0x10, 0x57, 0x17, 0x09,  // 235:4183
  0x10, 0x6E, 0x05, 0x03,  // 236:4206
  0x10, 0x73, 0x07, 0x03,  // 237:4211
  0x10, 0x7A, 0x0D, 0x05,  // 238:4218
  0x10, 0x87, 0x0D, 0x05,  // 239:4231
  0x10, 0x94, 0x17, 0x09,  // 240:4244
  0x10, 0xAB, 0x14, 0x08,  // 241:4267
  0x10, 0xBF, 0x17, 0x09,  // 242:4287
  0x10, 0xD6, 0x17, 0x09,  // 243:4310
  0x10, 0xED, 0x17, 0x09,  // 244:4333
  0x11, 0x04, 0x17, 0x09,  // 245:4356
  0x11, 0x1B, 0x17, 0x09,  // 246:4379
  0x11, 0x32, 0x1A, 0x0A,  // 247:4402
  0x11, 0x4C, 0x17, 0x09,  // 248:4428
  0x11, 0x63, 0x14, 0x08,  // 249:4451
  0x11, 0x77, 0x14, 0x08,  // 250:4471
  0x11, 0x8B, 0x14, 0x08,  // 251:4491
  0x11, 0x9F, 0x14, 0x08,  // 252:4511
  0x11, 0xB3, 0x16, 0x08,  // 253:4531
  0x11, 0xC9, 0x17, 0x09,  // 254:4553
  0x11, 0xE0, 0x16, 0x08,  // 255:4576

  // Font Data:
  0x00,0x00,0x00,0xF8,0x47, // 33
  0x00,0x00,0x00,0x78,0x00,0x00,0x00,0x00,0x00,0x78,  // 34
  0x00,0x00,0x00,0x00,0x08,0x00,0x40,0x08,0x00,0x40,0x7C,0x00,0xF0,0x0B,0x00,0x48,0x08,0x00,0x40,0x7C,0x00,0xF8,0x0B,0x00,0x48,0x08,0x00,0x40,  // 35
  0x00,0x00,0x00,0x00,0x30,0x00,0xE0,0x61,0x00,0x30,0x41,0x00,0x1C,0xC2,0x01,0x10,0x42,0x00,0x30,0x64,0x00,0x60,0x38, // 36
  0x00,0x00,0x00,0x70,0x00,0x00,0x88,0x00,0x00,0x88,0x30,0x00,0x88,0x18,0x00,0x70,0x06,0x00,0x00,0x03,0x00,0xC0,0x3C,0x00,0x30,0x42,0x00,0x00,0x42,0x00,0x00,0x3C,  // 37
  0x00,0x00,0x00,0x00,0x3C,0x00,0xF0,0x66,0x00,0x88,0x43,0x00,0x08,0x47,0x00,0x88,0x4D,0x00,0x70,0x78,0x00,0x00,0x30,0x00,0x00,0x7C,  // 38
  0x00,0x00,0x00,0x78,  // 39
  0x00,0x00,0x00,0xC0,0x3F,0x00,0x30,0xC0,0x01,0x0C,0x00,0x02,0x04, // 40
  0x04,0x00,0x00,0x0C,0x00,0x03,0x30,0xC0,0x01,0xC0,0x3F, // 41
  0x20,0x00,0x00,0x20,0x00,0x00,0xC0,0x01,0x00,0xF8,0x00,0x00,0xC0,0x01,0x00,0x60,  // 42
  0x00,0x00,0x00,0x00,0x02,0x00,0x00,0x02,0x00,0x00,0x02,0x00,0xC0,0x3F,0x00,0x00,0x02,0x00,0x00,0x02,0x00,0x00,0x02,0x00,0x00,0x02,  // 43
  0x00,0x00,0x01,0x00,0xE0, // 44
  0x00,0x00,0x00,0x00,0x02,0x00,0x00,0x02,0x00,0x00,0x02,0x00,0x00,0x02,  // 45
  0x00,0x00,0x00,0x00,0x60,0x00,0x00,0x60,  // 46
  0x00,0x80,0x00,0x00,0xF0,0x00,0x00,0x1C,0x00,0x80,0x03,0x00,0x70,0x00,0x00,0x18,  // 47
  0x00,0x00,0x00,0xE0,0x1F,0x00,0x10,0x20,0x00,0x08,0x40,0x00,0x08,0x40,0x00,0x08,0x40,0x00,0x10,0x20,0x00,0xE0,0x1F, // 48
  0x00,0x00,0x00,0x30,0x00,0x00,0x10,0x00,0x00,0x10,0x00,0x00,0xF8,0x7F,  // 49
  0x00,0x00,0x00,0x60,0x40,0x00,0x10,0x70,0x00,0x08,0x58,0x00,0x08,0x4C,0x00,0x08,0x46,0x00,0x18,0x43,0x00,0xF0,0x40, // 50
  0x00,0x00,0x00,0x30,0x10,0x00,0x18,0x20,0x00,0x08,0x41,0x00,0x08,0x41,0x00,0x08,0x41,0x00,0x98,0x23,0x00,0xF0,0x1E, // 51
  0x00,0x00,0x00,0x00,0x0C,0x00,0x00,0x0E,0x00,0x80,0x09,0x00,0xE0,0x08,0x00,0x30,0x08,0x00,0xF8,0x7F,0x00,0x00,0x08,0x00,0x00,0x08,  // 52
  0x00,0x00,0x00,0x00,0x10,0x00,0xF8,0x31,0x00,0x88,0x40,0x00,0x88,0x40,0x00,0x88,0x40,0x00,0x88,0x21,0x00,0x08,0x1E, // 53
  0x00,0x00,0x00,0xC0,0x1F,0x00,0x20,0x21,0x00,0x90,0x40,0x00,0x88,0x40,0x00,0x88,0x40,0x00,0x08,0x21,0x00,0x00,0x1E, // 54
  0x00,0x00,0x00,0x08,0x00,0x00,0x08,0x00,0x00,0x08,0x60,0x00,0x08,0x3C,0x00,0x08,0x0F,0x00,0xC8,0x03,0x00,0x78,0x00,0x00,0x18, // 55
  0x00,0x00,0x00,0xF0,0x1E,0x00,0x98,0x23,0x00,0x08,0x41,0x00,0x08,0x41,0x00,0x08,0x41,0x00,0x98,0x23,0x00,0xF0,0x1E, // 56
  0x00,0x00,0x00,0xE0,0x01,0x00,0x10,0x42,0x00,0x08,0x44,0x00,0x08,0x44,0x00,0x08,0x24,0x00,0x10,0x32,0x00,0xE0,0x0F, // 57
  0x00,0x00,0x00,0xC0,0x60,0x00,0xC0,0x60,  // 58
  0x00,0x00,0x00,0xC0,0xE0,0x03,0xC0,0xE0,  // 59
  0x00,0x00,0x00,0x00,0x06,0x00,0x00,0x07,0x00,0x00,0x05,0x00,0x80,0x09,0x00,0x80,0x08,0x00,0xC0,0x18,0x00,0x80,0x10, // 60
  0x00,0x00,0x00,0x80,0x08,0x00,0x80,0x08,0x00,0x80,0x08,0x00,0x80,0x08,0x00,0x80,0x08,0x00,0x80,0x08,0x00,0x80,0x08, // 61
  0x00,0x00,0x00,0xC0,0x10,0x00,0x80,0x18,0x00,0x80,0x09,0x00,0x00,0x0D,0x00,0x00,0x05,0x00,0x00,0x06,0x00,0x00,0x02, // 62
  0x00,0x00,0x00,0x30,0x00,0x00,0x18,0x00,0x00,0x08,0x4C,0x00,0x08,0x02,0x00,0x18,0x01,0x00,0xF0, // 63
  0x00,0x00,0x00,0x00,0x3F,0x00,0xC0,0xC0,0x00,0x20,0x00,0x01,0x10,0x08,0x01,0x08,0x7F,0x02,0x88,0x40,0x02,0x48,0x40,0x02,0x48,0x30,0x02,0xC8,0x7F,0x02,0x10,0x40,0x00,0x30,0x40,0x00,0x60,0x20,0x00,0x80,0x1F, // 64
  0x00,0x40,0x00,0x00,0x78,0x00,0x00,0x1E,0x00,0xC0,0x0B,0x00,0x78,0x08,0x00,0x38,0x08,0x00,0xE0,0x09,0x00,0x80,0x0F,0x00,0x00,0x7C,0x00,0x00,0x60, // 65
  0x00,0x00,0x00,0xF8,0x7F,0x00,0x08,0x41,0x00,0x08,0x41,0x00,0x08,0x41,0x00,0x08,0x41,0x00,0x98,0x63,0x00,0xF0,0x3E, // 66
  0x00,0x00,0x00,0xC0,0x0F,0x00,0x30,0x30,0x00,0x08,0x40,0x00,0x08,0x40,0x00,0x08,0x40,0x00,0x08,0x40,0x00,0x30,0x30,0x00,0x60,0x18,  // 67
  0x00,0x00,0x00,0xF8,0x7F,0x00,0x08,0x40,0x00,0x08,0x40,0x00,0x08,0x40,0x00,0x08,0x40,0x00,0x10,0x20,0x00,0x30,0x30,0x00,0xC0,0x0F,  // 68
  0x00,0x00,0x00,0xF8,0x7F,0x00,0x08,0x41,0x00,0x08,0x41,0x00,0x08,0x41,0x00,0x08,0x41,0x00,0x08,0x41,0x00,0x08,0x40, // 69
  0x00,0x00,0x00,0xF8,0x7F,0x00,0x08,0x02,0x00,0x08,0x02,0x00,0x08,0x02,0x00,0x08,0x02,0x00,0x08,0x02,0x00,0x08,  // 70
  0x00,0x00,0x00,0xC0,0x0F,0x00,0x30,0x30,0x00,0x18,0x20,0x00,0x08,0x40,0x00,0x08,0x40,0x00,0x08,0x42,0x00,0x08,0x42,0x00,0x10,0x62,0x00,0x20,0x3E, // 71
  0x00,0x00,0x00,0xF8,0x7F,0x00,0x00,0x01,0x00,0x00,0x01,0x00,0x00,0x01,0x00,0x00,0x01,0x00,0x00,0x01,0x00,0x00,0x01,0x00,0xF8,0x7F,  // 72
  0x00,0x00,0x00,0xF8,0x7F, // 73
  0x00,0x00,0x00,0x00,0x30,0x00,0x00,0x60,0x00,0x00,0x40,0x00,0x00,0x40,0x00,0x00,0x40,0x00,0x00,0x20,0x00,0xF8,0x1F, // 74
  0x00,0x00,0x00,0xF8,0x7F,0x00,0x00,0x03,0x00,0x80,0x03,0x00,0xC0,0x07,0x00,0x60,0x0C,0x00,0x30,0x38,0x00,0x18,0x60,0x00,0x00,0x40,  // 75
  0x00,0x00,0x00,0xF8,0x7F,0x00,0x00,0x40,0x00,0x00,0x40,0x00,0x00,0x40,0x00,0x00,0x40,0x00,0x00,0x40,  // 76
  0x00,0x00,0x00,0xF8,0x7F,0x00,0x78,0x00,0x00,0xE0,0x01,0x00,0x00,0x0F,0x00,0x00,0x3C,0x00,0x00,0x60,0x00,0x00,0x3C,0x00,0x00,0x0F,0x00,0xE0,0x01,0x00,0x78,0x00,0x00,0xF8,0x7F, // 77
  0x00,0x00,0x00,0xF8,0x7F,0x00,0x70,0x00,0x00,0xE0,0x00,0x00,0x80,0x03,0x00,0x00,0x07,0x00,0x00,0x1C,0x00,0x00,0x30,0x00,0xF8,0x7F,  // 78
  0x00,0x00,0x00,0xC0,0x0F,0x00,0x30,0x30,0x00,0x18,0x60,0x00,0x08,0x40,0x00,0x08,0x40,0x00,0x08,0x40,0x00,0x18,0x60,0x00,0x30,0x30,0x00,0xC0,0x0F, // 79
  0x00,0x00,0x00,0xF8,0x7F,0x00,0x08,0x02,0x00,0x08,0x02,0x00,0x08,0x02,0x00,0x08,0x02,0x00,0x08,0x02,0x00,0x10,0x01,0x00,0xE0, // 80
  0x00,0x00,0x00,0xC0,0x0F,0x00,0x30,0x30,0x00,0x18,0x20,0x00,0x08,0x40,0x00,0x08,0x40,0x00,0x08,0x40,0x00,0x18,0x60,0x00,0x30,0xF0,0x00,0xC0,0x9F,0x01,  // 81
  0x00,0x00,0x00,0xF8,0x7F,0x00,0x08,0x02,0x00,0x08,0x02,0x00,0x08,0x02,0x00,0x08,0x02,0x00,0x08,0x0E,0x00,0x10,0x3F,0x00,0xE0,0x61,  // 82
  0x00,0x00,0x00,0x00,0x10,0x00,0xF0,0x20,0x00,0x90,0x41,0x00,0x08,0x41,0x00,0x08,0x43,0x00,0x08,0x42,0x00,0x10,0x26,0x00,0x20,0x3C,  // 83
  0x00,0x00,0x00,0x08,0x00,0x00,0x08,0x00,0x00,0x08,0x00,0x00,0x08,0x00,0x00,0xF8,0x7F,0x00,0x08,0x00,0x00,0x08,0x00,0x00,0x08,0x00,0x00,0x08,  // 84
  0x00,0x00,0x00,0xF8,0x1F,0x00,0x00,0x20,0x00,0x00,0x40,0x00,0x00,0x40,0x00,0x00,0x40,0x00,0x00,0x40,0x00,0x00,0x20,0x00,0xF8,0x1F,  // 85
  0x08,0x00,0x00,0x78,0x00,0x00,0xE0,0x01,0x00,0x00,0x0F,0x00,0x00,0x78,0x00,0x00,0x70,0x00,0x00,0x1E,0x00,0xC0,0x03,0x00,0x78,0x00,0x00,0x08,  // 86
  0x00,0x00,0x00,0x78,0x00,0x00,0xE0,0x0F,0x00,0x00,0x7C,0x00,0x00,0x78,0x00,0x80,0x0F,0x00,0xF8,0x00,0x00,0x78,0x00,0x00,0xC0,0x03,0x00,0x00,0x3E,0x00,0x00,0x70,0x00,0x80,0x1F,0x00,0xF8,0x01,0x00,0x18,  // 87
  0x00,0x00,0x00,0x18,0x60,0x00,0x38,0x70,0x00,0xE0,0x1C,0x00,0x80,0x07,0x00,0x80,0x07,0x00,0xE0,0x1C,0x00,0x38,0x30,0x00,0x18,0x60,  // 88
  0x08,0x00,0x00,0x38,0x00,0x00,0xE0,0x00,0x00,0x80,0x03,0x00,0x00,0x7E,0x00,0x80,0x03,0x00,0xE0,0x00,0x00,0x38,0x00,0x00,0x08, // 89
  0x00,0x00,0x00,0x08,0x60,0x00,0x08,0x70,0x00,0x08,0x5C,0x00,0x08,0x47,0x00,0x88,0x43,0x00,0xE8,0x40,0x00,0x38,0x40,0x00,0x18,0x40,  // 90
  0x00,0x00,0x00,0xFE,0xFF,0x01,0x02,0x00,0x01,0x02,0x00,0x01,  // 91
  0x08,0x00,0x00,0x38,0x00,0x00,0xE0,0x01,0x00,0x00,0x0F,0x00,0x00,0x38,0x00,0x00,0xE0, // 92
  0x02,0x00,0x01,0x02,0x00,0x01,0xFE,0xFF,0x01, // 93
  0x00,0x00,0x00,0xC0,0x01,0x00,0x70,0x00,0x00,0x18,0x00,0x00,0xE0,0x00,0x00,0x80,0x01, // 94
  0x00,0x00,0x00,0x00,0x80,0x00,0x00,0x80,0x00,0x00,0x80,0x00,0x00,0x80,0x00,0x00,0x80,0x00,0x00,0x80,0x00,0x00,0x80, // 95
  0x00,0x00,0x00,0x08,0x00,0x00,0x30,0x00,0x00,0x20,  // 96
  0x00,0x00,0x00,0x80,0x39,0x00,0xC0,0x4C,0x00,0x40,0x44,0x00,0x40,0x44,0x00,0xC0,0x64,0x00,0x80,0x7F,  // 97
  0x00,0x00,0x00,0xF8,0x7F,0x00,0x80,0x60,0x00,0x40,0x40,0x00,0x40,0x40,0x00,0x40,0x40,0x00,0x80,0x20,0x00,0x00,0x1F, // 98
  0x00,0x00,0x00,0x00,0x1F,0x00,0x80,0x20,0x00,0x40,0x40,0x00,0x40,0x40,0x00,0x40,0x40,0x00,0xC0,0x61,0x00,0x80,0x31, // 99
  0x00,0x00,0x00,0x00,0x1F,0x00,0x80,0x20,0x00,0x40,0x40,0x00,0x40,0x40,0x00,0x40,0x40,0x00,0xC0,0x60,0x00,0xF8,0x7F, // 100
  0x00,0x00,0x00,0x00,0x1F,0x00,0x80,0x24,0x00,0x40,0x44,0x00,0x40,0x44,0x00,0x40,0x44,0x00,0x80,0x44,0x00,0x00,0x27, // 101
  0x00,0x00,0x00,0x40,0x00,0x00,0x40,0x00,0x00,0xF8,0x7F,0x00,0x44,0x00,0x00,0x44,  // 102
  0x00,0x00,0x00,0x00,0x1F,0x01,0x80,0x20,0x03,0x40,0x40,0x02,0x40,0x40,0x02,0x40,0x40,0x02,0x80,0x60,0x01,0xC0,0xFF, // 103
  0x00,0x00,0x00,0xF8,0x7F,0x00,0x80,0x00,0x00,0x40,0x00,0x00,0x40,0x00,0x00,0x40,0x00,0x00,0x80,0x7F,  // 104
  0x00,0x00,0x00,0xC8,0x7F, // 105
  0x00,0x00,0x02,0xC8,0xFF,0x01,  // 106
  0x00,0x00,0x00,0xF8,0x7F,0x00,0x00,0x06,0x00,0x00,0x0F,0x00,0x80,0x19,0x00,0xC0,0x70,0x00,0x40,0x40,  // 107
  0x00,0x00,0x00,0xF8,0x7F, // 108
  0x00,0x00,0x00,0xC0,0x7F,0x00,0xC0,0x00,0x00,0x40,0x00,0x00,0x40,0x00,0x00,0x40,0x00,0x00,0x80,0x7F,0x00,0x80,0x00,0x00,0x40,0x00,0x00,0x40,0x00,0x00,0x40,0x00,0x00,0x80,0x7F, // 109
  0x00,0x00,0x00,0xC0,0x7F,0x00,0x80,0x00,0x00,0x40,0x00,0x00,0x40,0x00,0x00,0x40,0x00,0x00,0x80,0x7F,  // 110
  0x00,0x00,0x00,0x00,0x1F,0x00,0x80,0x20,0x00,0x40,0x40,0x00,0x40,0x40,0x00,0x40,0x40,0x00,0x80,0x20,0x00,0x00,0x1F, // 111
  0x00,0x00,0x00,0xC0,0xFF,0x03,0xC0,0x60,0x00,0x40,0x40,0x00,0x40,0x40,0x00,0x40,0x40,0x00,0x80,0x20,0x00,0x00,0x1F, // 112
  0x00,0x00,0x00,0x00,0x1F,0x00,0x80,0x20,0x00,0x40,0x40,0x00,0x40,0x40,0x00,0x40,0x40,0x00,0xC0,0x60,0x00,0xC0,0xFF,0x03,  // 113
  0x00,0x00,0x00,0xC0,0x7F,0x00,0xC0,0x00,0x00,0x40,0x00,0x00,0x40, // 114
  0x00,0x00,0x00,0x00,0x30,0x00,0x80,0x63,0x00,0x40,0x46,0x00,0x40,0x44,0x00,0x40,0x4C,0x00,0x80,0x39,  // 115
  0x00,0x00,0x00,0x40,0x00,0x00,0x40,0x00,0x00,0xF0,0x3F,0x00,0x40,0x40,0x00,0x40,0x40, // 116
  0x00,0x00,0x00,0xC0,0x3F,0x00,0x00,0x40,0x00,0x00,0x40,0x00,0x00,0x40,0x00,0x00,0x60,0x00,0xC0,0x7F,  // 117
  0x40,0x00,0x00,0xC0,0x03,0x00,0x00,0x1F,0x00,0x00,0x70,0x00,0x00,0x78,0x00,0x00,0x0F,0x00,0xC0,0x01,  // 118
  0x40,0x00,0x00,0xC0,0x03,0x00,0x00,0x3E,0x00,0x00,0x70,0x00,0x00,0x1E,0x00,0xC0,0x03,0x00,0xC0,0x03,0x00,0x00,0x1E,0x00,0x00,0x60,0x00,0x00,0x3E,0x00,0xC0,0x03,0x00,0x40,  // 119
  0x00,0x00,0x00,0xC0,0x60,0x00,0x80,0x31,0x00,0x00,0x0E,0x00,0x00,0x1F,0x00,0x80,0x31,0x00,0xC0,0x60,  // 120
  0x00,0x00,0x00,0xC0,0x01,0x02,0x80,0x0F,0x02,0x00,0xFC,0x01,0x00,0x70,0x00,0x00,0x1F,0x00,0xC0,0x03,0x00,0x40,  // 121
  0x00,0x00,0x00,0x40,0x60,0x00,0x40,0x70,0x00,0x40,0x5C,0x00,0x40,0x4E,0x00,0x40,0x43,0x00,0xC0,0x41,0x00,0xC0,0x40, // 122
  0x00,0x02,0x00,0x00,0x02,0x00,0xF8,0xFD,0x00,0x04,0x00,0x01,0x04,0x00,0x01, // 123
  0x00,0x00,0x00,0xF8,0xFF,0x01,  // 124
  0x04,0x00,0x01,0x04,0x00,0x01,0xF8,0xFD,0x00,0x00,0x06,0x00,0x00,0x02,  // 125
  0x00,0x00,0x00,0x00,0x0C,0x00,0x00,0x02,0x00,0x00,0x02,0x00,0x00,0x06,0x00,0x00,0x04,0x00,0x00,0x08,0x00,0x00,0x08,0x00,0x00,0x08,0x00,0x00,0x06, // 126
  0xF8,0x7F,0x00,0x68,0x58,0x00,0x88,0x47,0x00,0xC8,0x4C,0x00,0x38,0x50,0x00,0xF8,0x7F, // 127
  0xF8,0x7F,0x00,0x68,0x58,0x00,0x88,0x47,0x00,0xC8,0x4C,0x00,0x38,0x50,0x00,0xF8,0x7F, // 128
  0xF8,0x7F,0x00,0x68,0x58,0x00,0x88,0x47,0x00,0xC8,0x4C,0x00,0x38,0x50,0x00,0xF8,0x7F, // 129
  0xF8,0x7F,0x00,0x68,0x58,0x00,0x88,0x47,0x00,0xC8,0x4C,0x00,0x38,0x50,0x00,0xF8,0x7F, // 130
  0xF8,0x7F,0x00,0x68,0x58,0x00,0x88,0x47,0x00,0xC8,0x4C,0x00,0x38,0x50,0x00,0xF8,0x7F, // 131
  0xF8,0x7F,0x00,0x68,0x58,0x00,0x88,0x47,0x00,0xC8,0x4C,0x00,0x38,0x50,0x00,0xF8,0x7F, // 132
  0xF8,0x7F,0x00,0x68,0x58,0x00,0x88,0x47,0x00,0xC8,0x4C,0x00,0x38,0x50,0x00,0xF8,0x7F, // 133
  0xF8,0x7F,0x00,0x68,0x58,0x00,0x88,0x47,0x00,0xC8,0x4C,0x00,0x38,0x50,0x00,0xF8,0x7F, // 134
  0xF8,0x7F,0x00,0x68,0x58,0x00,0x88,0x47,0x00,0xC8,0x4C,0x00,0x38,0x50,0x00,0xF8,0x7F, // 135
  0xF8,0x7F,0x00,0x68,0x58,0x00,0x88,0x47,0x00,0xC8,0x4C,0x00,0x38,0x50,0x00,0xF8,0x7F, // 136
  0xF8,0x7F,0x00,0x68,0x58,0x00,0x88,0x47,0x00,0xC8,0x4C,0x00,0x38,0x50,0x00,0xF8,0x7F, // 137
  0xF8,0x7F,0x00,0x68,0x58,0x00,0x88,0x47,0x00,0xC8,0x4C,0x00,0x38,0x50,0x00,0xF8,0x7F, // 138
  0xF8,0x7F,0x00,0x68,0x58,0x00,0x88,0x47,0x00,0xC8,0x4C,0x00,0x38,0x50,0x00,0xF8,0x7F, // 139
  0xF8,0x7F,0x00,0x68,0x58,0x00,0x88,0x47,0x00,0xC8,0x4C,0x00,0x38,0x50,0x00,0xF8,0x7F, // 140
  0xF8,0x7F,0x00,0x68,0x58,0x00,0x88,0x47,0x00,0xC8,0x4C,0x00,0x38,0x50,0x00,0xF8,0x7F, // 141
  0xF8,0x7F,0x00,0x68,0x58,0x00,0x88,0x47,0x00,0xC8,0x4C,0x00,0x38,0x50,0x00,0xF8,0x7F, // 142
  0xF8,0x7F,0x00,0x68,0x58,0x00,0x88,0x47,0x00,0xC8,0x4C,0x00,0x38,0x50,0x00,0xF8,0x7F, // 143
  0xF8,0x7F,0x00,0x68,0x58,0x00,0x88,0x47,0x00,0xC8,0x4C,0x00,0x38,0x50,0x00,0xF8,0x7F, // 144
  0xF8,0x7F,0x00,0x68,0x58,0x00,0x88,0x47,0x00,0xC8,0x4C,0x00,0x38,0x50,0x00,0xF8,0x7F, // 145
  0xF8,0x7F,0x00,0x68,0x58,0x00,0x88,0x47,0x00,0xC8,0x4C,0x00,0x38,0x50,0x00,0xF8,0x7F, // 146
  0xF8,0x7F,0x00,0x68,0x58,0x00,0x88,0x47,0x00,0xC8,0x4C,0x00,0x38,0x50,0x00,0xF8,0x7F, // 147
  0xF8,0x7F,0x00,0x68,0x58,0x00,0x88,0x47,0x00,0xC8,0x4C,0x00,0x38,0x50,0x00,0xF8,0x7F, // 148
  0xF8,0x7F,0x00,0x68,0x58,0x00,0x88,0x47,0x00,0xC8,0x4C,0x00,0x38,0x50,0x00,0xF8,0x7F, // 149
  0xF8,0x7F,0x00,0x68,0x58,0x00,0x88,0x47,0x00,0xC8,0x4C,0x00,0x38,0x50,0x00,0xF8,0x7F, // 150
  0xF8,0x7F,0x00,0x68,0x58,0x00,0x88,0x47,0x00,0xC8,0x4C,0x00,0x38,0x50,0x00,0xF8,0x7F, // 151
  0xF8,0x7F,0x00,0x68,0x58,0x00,0x88,0x47,0x00,0xC8,0x4C,0x00,0x38,0x50,0x00,0xF8,0x7F, // 152
  0xF8,0x7F,0x00,0x68,0x58,0x00,0x88,0x47,0x00,0xC8,0x4C,0x00,0x38,0x50,0x00,0xF8,0x7F, // 153
  0xF8,0x7F,0x00,0x68,0x58,0x00,0x88,0x47,0x00,0xC8,0x4C,0x00,0x38,0x50,0x00,0xF8,0x7F, // 154
  0xF8,0x7F,0x00,0x68,0x58,0x00,0x88,0x47,0x00,0xC8,0x4C,0x00,0x38,0x50,0x00,0xF8,0x7F, // 155
  0xF8,0x7F,0x00,0x68,0x58,0x00,0x88,0x47,0x00,0xC8,0x4C,0x00,0x38,0x50,0x00,0xF8,0x7F, // 156
  0xF8,0x7F,0x00,0x68,0x58,0x00,0x88,0x47,0x00,0xC8,0x4C,0x00,0x38,0x50,0x00,0xF8,0x7F, // 157
  0xF8,0x7F,0x00,0x68,0x58,0x00,0x88,0x47,0x00,0xC8,0x4C,0x00,0x38,0x50,0x00,0xF8,0x7F, // 158
  0xF8,0x7F,0x00,0x68,0x58,0x00,0x88,0x47,0x00,0xC8,0x4C,0x00,0x38,0x50,0x00,0xF8,0x7F, // 159
  0x00,0x00,0x00,0x40,0xFE,0x01,  // 161
  0x00,0x00,0x00,0x00,0x1F,0x00,0x80,0x20,0x00,0x40,0x40,0x00,0x70,0xC0,0x01,0x40,0x40,0x00,0xC0,0x71,0x00,0x80,0x31, // 162
  0x00,0x00,0x00,0x00,0x42,0x00,0x00,0x42,0x00,0xE0,0x7F,0x00,0x18,0x42,0x00,0x08,0x42,0x00,0x08,0x40,0x00,0x18,0x40,0x00,0x30,0x40,  // 163
  0x00,0x00,0x00,0xE0,0x7F,0x00,0xC0,0x30,0x00,0x60,0x60,0x00,0x20,0x40,0x00,0x20,0x40,0x00,0x20,0x40,0x00,0x60,0x60,0x00,0xC0,0x30,0x00,0xE0,0x7F, // 164
  0x08,0x00,0x00,0x18,0x0A,0x00,0x70,0x0A,0x00,0xC0,0x0B,0x00,0x00,0x7E,0x00,0xC0,0x0B,0x00,0x70,0x0A,0x00,0x18,0x0A,0x00,0x08, // 165
  0x00,0x00,0x00,0xF8,0xF9,0x01,  // 166
  0x00,0x00,0x00,0x00,0x0E,0x01,0xF0,0x11,0x02,0x98,0x31,0x04,0x08,0x31,0x04,0x08,0x21,0x04,0x08,0x63,0x04,0x18,0x62,0x06,0x30,0xDC,0x03, // 167
  0x00,0x00,0x00,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,  // 168
  0x00,0x00,0x00,0xC0,0x0F,0x00,0x60,0x18,0x00,0x10,0x20,0x00,0xD8,0x67,0x00,0x28,0x48,0x00,0x28,0x48,0x00,0x28,0x48,0x00,0x58,0x64,0x00,0x10,0x20,0x00,0x60,0x18,0x00,0xC0,0x0F, // 169
  0x00,0x00,0x00,0x90,0x01,0x00,0x48,0x02,0x00,0x48,0x02,0x00,0x48,0x02,0x00,0xF0,0x03, // 170
  0x00,0x00,0x00,0x00,0x0C,0x00,0x00,0x1E,0x00,0x00,0x21,0x00,0x00,0x0C,0x00,0x00,0x33,0x00,0x00,0x21,  // 171
  0x00,0x00,0x00,0x00,0x02,0x00,0x00,0x02,0x00,0x00,0x02,0x00,0x00,0x02,0x00,0x00,0x02,0x00,0x00,0x0E,  // 172
  0x00,0x00,0x00,0x00,0x02,0x00,0x00,0x02,0x00,0x00,0x02,0x00,0x00,0x02,  // 173
  0x00,0x00,0x00,0xC0,0x0F,0x00,0x60,0x18,0x00,0x10,0x20,0x00,0xF8,0x6F,0x00,0x28,0x41,0x00,0x28,0x41,0x00,0x28,0x41,0x00,0xD8,0x6E,0x00,0x10,0x20,0x00,0x60,0x18,0x00,0x80,0x0F, // 174
  0x00,0x00,0x00,0x08,0x00,0x00,0x08,0x00,0x00,0x08,0x00,0x00,0x08,0x00,0x00,0x08,0x00,0x00,0x08, // 175
  0x00,0x00,0x00,0x30,0x00,0x00,0x48,0x00,0x00,0x48,0x00,0x00,0x30, // 176
  0x00,0x00,0x00,0x00,0x41,0x00,0x00,0x41,0x00,0x00,0x41,0x00,0xE0,0x5F,0x00,0x00,0x41,0x00,0x00,0x41,0x00,0x00,0x41, // 177
  0x00,0x00,0x00,0x10,0x01,0x00,0x88,0x01,0x00,0x48,0x01,0x00,0x30,0x01,0x00,0x00,0x01, // 178
  0x00,0x00,0x00,0x18,0x03,0x00,0x48,0x02,0x00,0x48,0x02,0x00,0xB0,0x01,  // 179
  0x00,0x00,0x00,0x20,0x00,0x00,0x18,0x00,0x00,0x08,  // 180
  0x00,0x00,0x00,0xC0,0xFF,0x03,0x00,0x60,0x00,0x00,0x40,0x00,0x00,0x40,0x00,0x00,0x60,0x00,0xC0,0x7F,  // 181
  0x40,0x00,0x00,0xF0,0x01,0x00,0xF8,0x03,0x00,0xF8,0x03,0x00,0xF8,0x03,0x00,0xF8,0x7F, // 182
  0x00,0x00,0x00,0x00,0x03,0x00,0x00,0x03,  // 183
  0x00,0x00,0x00,0x00,0xC0,0x02,0x00,0x80,0x01, // 184
  0x10,0x00,0x00,0x10,0x00,0x00,0xF8,0x01,  // 185
  0x00,0x00,0x00,0xF0,0x00,0x00,0x08,0x01,0x00,0x08,0x01,0x00,0x08,0x01,0x00,0xF0,  // 186
  0x00,0x00,0x00,0x00,0x21,0x00,0x00,0x1E,0x00,0x00,0x0C,0x00,0x00,0x33,0x00,0x00,0x0C, // 187
  0x10,0x00,0x00,0x10,0x00,0x00,0xF8,0x21,0x00,0x00,0x10,0x00,0x00,0x0C,0x00,0x00,0x03,0x00,0x80,0x31,0x00,0x60,0x28,0x00,0x10,0x24,0x00,0x00,0x7E,0x00,0x00,0x20,  // 188
  0x10,0x00,0x00,0x10,0x00,0x00,0xF8,0x21,0x00,0x00,0x18,0x00,0x00,0x06,0x00,0x80,0x01,0x00,0xE0,0x42,0x00,0x30,0x63,0x00,0x00,0x71,0x00,0x00,0x59,0x00,0x00,0x4E,  // 189
  0x00,0x00,0x00,0x18,0x03,0x00,0x48,0x02,0x00,0x48,0x02,0x00,0xB0,0x31,0x00,0x00,0x0C,0x00,0x00,0x06,0x00,0x80,0x31,0x00,0x40,0x38,0x00,0x30,0x24,0x00,0x00,0x7E,0x00,0x00,0x20, // 190
  0x00,0x00,0x00,0x00,0xE0,0x01,0x00,0x10,0x03,0x00,0x08,0x02,0x40,0x06,0x02,0x00,0x00,0x03,0x00,0x80,0x01, // 191
  0x00,0x40,0x00,0x00,0x78,0x00,0x00,0x1E,0x00,0xC1,0x0B,0x00,0x7B,0x08,0x00,0x3C,0x08,0x00,0xE0,0x09,0x00,0x80,0x0F,0x00,0x00,0x7C,0x00,0x00,0x60, // 192
  0x00,0x40,0x00,0x00,0x78,0x00,0x00,0x1E,0x00,0xC0,0x0B,0x00,0x7C,0x08,0x00,0x3E,0x08,0x00,0xE1,0x09,0x00,0x80,0x0F,0x00,0x00,0x7C,0x00,0x00,0x60, // 193
  0x00,0x00,0x00,0x00,0x70,0x00,0x00,0x1E,0x00,0xC2,0x0F,0x00,0xF3,0x08,0x00,0x19,0x08,0x00,0xF2,0x08,0x00,0x82,0x0F,0x00,0x00,0x1E,0x00,0x00,0x70, // 194
  0x00,0x60,0x00,0x00,0x3C,0x00,0x82,0x0F,0x00,0xF1,0x09,0x00,0x39,0x08,0x00,0x7A,0x08,0x00,0xC3,0x0F,0x00,0x00,0x1E,0x00,0x00,0x70,0x00,0x00,0x40, // 195
  0x00,0x00,0x00,0x00,0x70,0x00,0x00,0x3F,0x00,0xE2,0x0F,0x00,0xF8,0x08,0x00,0x18,0x08,0x00,0xF8,0x08,0x00,0xC2,0x0F,0x00,0x00,0x3E,0x00,0x00,0x70, // 196
  0x00,0x00,0x00,0x00,0x60,0x00,0x00,0x3C,0x00,0x80,0x0F,0x00,0xE3,0x08,0x00,0x1C,0x08,0x00,0xE7,0x09,0x00,0x80,0x0F,0x00,0x00,0x3C,0x00,0x00,0x60, // 197
  0x00,0x40,0x00,0x00,0x60,0x00,0x00,0x38,0x00,0x00,0x0E,0x00,0x80,0x0F,0x00,0xC0,0x09,0x00,0x70,0x08,0x00,0x18,0x08,0x00,0xF8,0x7F,0x00,0x08,0x41,0x00,0x08,0x41,0x00,0x08,0x41,0x00,0x08,0x41,0x00,0x08,0x41,0x00,0x08,0x40,  // 198
  0x00,0x00,0x00,0xC0,0x0F,0x00,0x30,0x38,0x00,0x18,0x70,0x00,0x08,0x60,0x00,0x08,0xE0,0x02,0x08,0x60,0x01,0x18,0x30,0x00,0x30,0x3C,0x00,0x00,0x0C, // 199
  0x00,0x00,0x00,0xF8,0x7F,0x00,0x09,0x41,0x00,0x0B,0x41,0x00,0x08,0x41,0x00,0x08,0x41,0x00,0x08,0x41,0x00,0x08,0x40, // 200
  0x00,0x00,0x00,0xF8,0x7F,0x00,0x08,0x41,0x00,0x08,0x41,0x00,0x0B,0x41,0x00,0x09,0x41,0x00,0x08,0x41,0x00,0x08,0x40, // 201
  0x00,0x00,0x00,0xF8,0x7F,0x00,0x0A,0x41,0x00,0x0B,0x41,0x00,0x09,0x41,0x00,0x0A,0x41,0x00,0x0A,0x41,0x00,0x08,0x41, // 202
  0x00,0x00,0x00,0xF8,0x7F,0x00,0x0A,0x41,0x00,0x08,0x41,0x00,0x08,0x41,0x00,0x08,0x41,0x00,0x0A,0x41,0x00,0x08,0x40, // 203
  0x01,0x00,0x00,0xFA,0x7F, // 204
  0x00,0x00,0x00,0xFA,0x7F,0x00,0x01, // 205
  0x02,0x00,0x00,0x02,0x00,0x00,0xF9,0x7F,0x00,0x02,0x00,0x00,0x02, // 206
  0x02,0x00,0x00,0x00,0x00,0x00,0xF8,0x7F,0x00,0x00,0x00,0x00,0x02, // 207
  0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x01,0x00,0xF8,0x7F,0x00,0x08,0x41,0x00,0x08,0x41,0x00,0x08,0x40,0x00,0x18,0x60,0x00,0x30,0x30,0x00,0xC0,0x0F, // 208
  0x00,0x00,0x00,0xF8,0x7F,0x00,0x72,0x00,0x00,0xE1,0x00,0x00,0x81,0x03,0x00,0x02,0x07,0x00,0x02,0x1C,0x00,0x01,0x30,0x00,0xF8,0x7F,  // 209
  0x00,0x00,0x00,0xC0,0x0F,0x00,0x30,0x30,0x00,0x19,0x60,0x00,0x0B,0x40,0x00,0x0A,0x40,0x00,0x08,0x40,0x00,0x18,0x60,0x00,0x30,0x30,0x00,0xC0,0x0F, // 210
  0x00,0x00,0x00,0xC0,0x0F,0x00,0x30,0x30,0x00,0x18,0x60,0x00,0x08,0x40,0x00,0x0A,0x40,0x00,0x0B,0x40,0x00,0x19,0x60,0x00,0x30,0x30,0x00,0xC0,0x0F, // 211
  0x00,0x00,0x00,0xC0,0x0F,0x00,0x30,0x30,0x00,0x1A,0x60,0x00,0x0B,0x40,0x00,0x09,0x40,0x00,0x0B,0x40,0x00,0x1A,0x60,0x00,0x30,0x30,0x00,0xC0,0x0F, // 212
  0x00,0x00,0x00,0xC0,0x0F,0x00,0x32,0x30,0x00,0x1B,0x60,0x00,0x09,0x40,0x00,0x09,0x40,0x00,0x0A,0x40,0x00,0x1B,0x60,0x00,0x31,0x30,0x00,0xC0,0x0F, // 213
  0x00,0x00,0x00,0xC0,0x0F,0x00,0x30,0x30,0x00,0x1A,0x60,0x00,0x08,0x40,0x00,0x08,0x40,0x00,0x08,0x40,0x00,0x1A,0x60,0x00,0x30,0x30,0x00,0xC0,0x0F, // 214
  0x00,0x00,0x00,0xC0,0x18,0x00,0x80,0x0D,0x00,0x00,0x07,0x00,0x00,0x07,0x00,0x80,0x0D,0x00,0xC0,0x18,0x00,0x00,0x10, // 215
  0x00,0x00,0x00,0xC0,0x9F,0x00,0x30,0x70,0x00,0x10,0x70,0x00,0x08,0x4C,0x00,0x08,0x46,0x00,0x88,0x41,0x00,0xD8,0x20,0x00,0x30,0x30,0x00,0xE8,0x0F, // 216
  0x00,0x00,0x00,0xF8,0x1F,0x00,0x00,0x20,0x00,0x01,0x40,0x00,0x03,0x40,0x00,0x02,0x40,0x00,0x00,0x40,0x00,0x00,0x20,0x00,0xF8,0x1F,  // 217
  0x00,0x00,0x00,0xF8,0x1F,0x00,0x00,0x20,0x00,0x00,0x40,0x00,0x00,0x40,0x00,0x03,0x40,0x00,0x01,0x40,0x00,0x00,0x20,0x00,0xF8,0x1F,  // 218
  0x00,0x00,0x00,0xF8,0x1F,0x00,0x00,0x20,0x00,0x02,0x40,0x00,0x03,0x40,0x00,0x01,0x40,0x00,0x02,0x40,0x00,0x02,0x20,0x00,0xF8,0x1F,  // 219
  0x00,0x00,0x00,0xF8,0x1F,0x00,0x00,0x20,0x00,0x02,0x40,0x00,0x00,0x40,0x00,0x00,0x40,0x00,0x02,0x40,0x00,0x00,0x20,0x00,0xF8,0x1F,  // 220
  0x08,0x00,0x00,0x38,0x00,0x00,0xE0,0x00,0x00,0x80,0x03,0x00,0x06,0x7E,0x00,0x83,0x03,0x00,0xE0,0x00,0x00,0x38,0x00,0x00,0x08, // 221
  0x00,0x00,0x00,0xF8,0x7F,0x00,0x40,0x08,0x00,0x40,0x08,0x00,0x40,0x08,0x00,0x40,0x08,0x00,0x80,0x04,0x00,0x80,0x07, // 222
  0x00,0x00,0x00,0xF0,0x7F,0x00,0x18,0x00,0x00,0x08,0x40,0x00,0x08,0x40,0x00,0x88,0x43,0x00,0x70,0x44,0x00,0x00,0x4C,0x00,0x00,0x38,  // 223
  0x00,0x00,0x00,0x80,0x39,0x00,0xC8,0x4C,0x00,0x58,0x44,0x00,0x50,0x44,0x00,0xC0,0x64,0x00,0x80,0x7F,  // 224
  0x00,0x00,0x00,0x80,0x39,0x00,0xC0,0x4C,0x00,0x40,0x44,0x00,0x50,0x44,0x00,0xC8,0x64,0x00,0x80,0x7F,  // 225
  0x00,0x00,0x00,0x80,0x39,0x00,0xD0,0x4C,0x00,0x58,0x44,0x00,0x48,0x44,0x00,0xD0,0x64,0x00,0x90,0x7F,  // 226
  0x00,0x00,0x00,0x80,0x39,0x00,0xC8,0x4C,0x00,0x48,0x44,0x00,0x48,0x44,0x00,0xC8,0x64,0x00,0x88,0x7F,  // 227
  0x00,0x00,0x00,0x80,0x39,0x00,0xC0,0x7D,0x00,0xC8,0x44,0x00,0x40,0x44,0x00,0x40,0x64,0x00,0x88,0x7F,  // 228
  0x00,0x00,0x00,0x80,0x39,0x00,0xC0,0x4C,0x00,0x4C,0x44,0x00,0x52,0x44,0x00,0xDC,0x64,0x00,0x80,0x7F,  // 229
  0x00,0x00,0x00,0x80,0x39,0x00,0xC0,0x4C,0x00,0x40,0x44,0x00,0x40,0x44,0x00,0xC0,0x64,0x00,0x80,0x3F,0x00,0x80,0x24,0x00,0x40,0x44,0x00,0x40,0x44,0x00,0x40,0x44,0x00,0x80,0x44,0x00,0x00,0x27,  // 230
  0x00,0x00,0x00,0x00,0x1F,0x00,0x80,0x30,0x00,0x40,0x60,0x02,0x40,0xE0,0x02,0x40,0x60,0x01,0xC0,0x30,0x00,0x80,0x19, // 231
  0x00,0x00,0x00,0x00,0x1F,0x00,0x88,0x24,0x00,0x48,0x44,0x00,0x50,0x44,0x00,0x40,0x44,0x00,0x80,0x44,0x00,0x00,0x27, // 232
  0x00,0x00,0x00,0x00,0x1F,0x00,0x80,0x24,0x00,0x40,0x44,0x00,0x50,0x44,0x00,0x58,0x44,0x00,0x88,0x44,0x00,0x00,0x27, // 233
  0x00,0x00,0x00,0x00,0x1F,0x00,0x90,0x24,0x00,0x50,0x44,0x00,0x48,0x44,0x00,0x58,0x44,0x00,0x90,0x64,0x00,0x00,0x27, // 234
  0x00,0x00,0x00,0x00,0x1F,0x00,0x80,0x3F,0x00,0xC8,0x64,0x00,0x40,0x44,0x00,0x40,0x44,0x00,0x88,0x64,0x00,0x00,0x27, // 235
  0x08,0x00,0x00,0xD0,0x7F, // 236
  0x00,0x00,0x00,0xD0,0x7F,0x00,0x08, // 237
  0x10,0x00,0x00,0x10,0x00,0x00,0xC8,0x7F,0x00,0x10,0x00,0x00,0x10, // 238
  0x08,0x00,0x00,0x00,0x00,0x00,0xC0,0x7F,0x00,0x00,0x00,0x00,0x08, // 239
  0x00,0x00,0x00,0x00,0x1E,0x00,0x0C,0x21,0x00,0xA8,0x40,0x00,0xB8,0x40,0x00,0xB0,0x40,0x00,0x78,0x21,0x00,0x80,0x1F, // 240
  0x00,0x00,0x00,0xD0,0x7F,0x00,0x88,0x00,0x00,0x48,0x00,0x00,0x50,0x00,0x00,0x50,0x00,0x00,0x88,0x7F,  // 241
  0x00,0x00,0x00,0x00,0x1F,0x00,0x88,0x20,0x00,0x58,0x40,0x00,0x50,0x40,0x00,0x40,0x40,0x00,0x80,0x20,0x00,0x00,0x1F, // 242
  0x00,0x00,0x00,0x00,0x1F,0x00,0x80,0x20,0x00,0x40,0x40,0x00,0x50,0x40,0x00,0x48,0x40,0x00,0x80,0x20,0x00,0x00,0x1F, // 243
  0x00,0x00,0x00,0x00,0x1F,0x00,0x90,0x20,0x00,0x58,0x40,0x00,0x48,0x40,0x00,0x50,0x40,0x00,0x90,0x20,0x00,0x00,0x1F, // 244
  0x00,0x00,0x00,0x00,0x1F,0x00,0x88,0x20,0x00,0x48,0x40,0x00,0x48,0x40,0x00,0x48,0x40,0x00,0x88,0x20,0x00,0x00,0x1F, // 245
  0x00,0x00,0x00,0x00,0x1F,0x00,0x80,0x3F,0x00,0xC8,0x60,0x00,0x40,0x40,0x00,0x40,0x40,0x00,0x88,0x20,0x00,0x00,0x1F, // 246
  0x00,0x00,0x00,0x00,0x02,0x00,0x00,0x02,0x00,0x00,0x02,0x00,0x60,0x32,0x00,0x60,0x32,0x00,0x00,0x02,0x00,0x00,0x02,0x00,0x00,0x02,  // 247
  0x00,0x00,0x00,0x00,0x1F,0x00,0x80,0xE0,0x00,0x40,0x70,0x00,0x40,0x4C,0x00,0xC0,0x43,0x00,0xE0,0x20,0x00,0x00,0x1F, // 248
  0x00,0x00,0x00,0xC0,0x3F,0x00,0x08,0x40,0x00,0x18,0x40,0x00,0x10,0x40,0x00,0x00,0x60,0x00,0xC0,0x7F,  // 249
  0x00,0x00,0x00,0xC0,0x3F,0x00,0x00,0x40,0x00,0x00,0x40,0x00,0x18,0x40,0x00,0x08,0x60,0x00,0xC0,0x7F,  // 250
  0x00,0x00,0x00,0xC0,0x3F,0x00,0x10,0x40,0x00,0x08,0x40,0x00,0x08,0x40,0x00,0x10,0x60,0x00,0xD0,0x7F,  // 251
  0x00,0x00,0x00,0xC0,0x3F,0x00,0x08,0x40,0x00,0x00,0x40,0x00,0x00,0x40,0x00,0x00,0x60,0x00,0xC8,0x7F,  // 252
  0x00,0x00,0x00,0xC0,0x01,0x02,0x80,0x0F,0x02,0x00,0xFC,0x01,0x10,0x70,0x00,0x08,0x1F,0x00,0xC0,0x03,0x00,0x40,  // 253
  0x00,0x00,0x00,0xF8,0xFF,0x03,0xC0,0x60,0x00,0x40,0x40,0x00,0x40,0x40,0x00,0x40,0x40,0x00,0x80,0x20,0x00,0x00,0x1F, // 254
  0x00,0x00,0x00,0xC0,0x01,0x02,0x88,0x07,0x02,0x00,0xBC,0x01,0x00,0xF0,0x00,0x00,0x1E,0x00,0xC8,0x03,0x00,0x40 // 255
};



IRrecv irrecv(RECV_PIN);
decode_results results;

// Config Firebase
#define FIREBASE_HOST "testir-5e0f2.firebaseio.com"
#define FIREBASE_AUTH "zN9Dka8tSRzWXXU228GGXKrC7II5cXJ4WsMvnOKg"

// Config connect WiFi
#define WIFI_SSID "Banklvp"
#define WIFI_PASSWORD "1928374655"

int i = 0;
int a = 000;

const int httpPort = 80;
Ticker sender;
const char* ssid = "Banklvp";
const char* password = "1928374655";
WiFiClient client;
const char* host = "192.168.1.1";//you pc IP

///
volatile boolean firstBeat = true;        // used to seed rate array so we startup with reasonable BPM
volatile boolean secondBeat = true;       // used to seed rate array so we startup with reasonable BPM
volatile int P =512;                      // used to find peak in pulse wave
volatile int T = 512;                     // used to find trough in pulse wave
volatile int amp = 100;                   // used to hold amplitude of pulse waveform
const int maxAvgSample = 20;
volatile int rate[maxAvgSample];                    // used to hold last ten IBI values
boolean sendok = false;
volatile unsigned long sampleCounter = 0;          // used to determine pulse timing
volatile unsigned long lastBeatTime = 0;           // used to find the inter beat interval
volatile int BPM;                   // used to hold the pulse rate
volatile int Signal;                // holds the incoming raw data
volatile int IBI = 600;             // holds the time between beats, the Inter-Beat Interval
volatile int thresh = 512;                // used to find instant moment of heart beat
volatile boolean Pulse = false;     // true when pulse wave is high, false when it's low
volatile boolean QS = false;
Ticker flipper;
///

SSD1306  display(0x3c, D3, D5);

void setup() {
  Serial.begin(115200);

  WiFi.mode(WIFI_STA);
  WiFi.begin(WIFI_SSID, WIFI_PASSWORD);
  Serial.print("connecting");

  while (WiFi.status() != WL_CONNECTED) {
    Serial.print(".");
    delay(500);
  }
  Serial.println();
  Serial.print("connected: ");
  Serial.println(WiFi.localIP());


  display.init();
display.flipScreenVertically();
display.setContrast(255);

  // Firebase.begin(FIREBASE_HOST, FIREBASE_AUTH);
  // irrecv.enableIRIn(); // Start the receiver
   // delay(10);

  // Serial.print("Connecting to ");
  // Serial.println(ssid);
  // WiFi.begin(ssid, password);
  // while (WiFi.status() != WL_CONNECTED) {
    // delay(500);
    // Serial.print(".");
  // }

  // Serial.println("");
  // Serial.println("WiFi connected");
  // Serial.println("IP address: ");
  // Serial.println(WiFi.localIP());
  // Serial.print("connecting to ");
  // Serial.println(host);


  // if (!client.connect(host, httpPort)) {
  //   Serial.println("connection failed1");
  //   return;
  // }

  // client.print("255");
  // delay(10);


  // Serial.println("end Setup");
  flipper.attach_ms(2, Test);
  // sender.attach(2, senderfunc);

  delay(2000);
}

void senderfunc()
{
  sendok=true;
}

void loop() {
  // Firebase.setInt("number", i);
  // Firebase.setInt("status", a);
  // if (Firebase.failed()) {
  //     Serial.print("set /number failed:");
  //     Serial.println(Firebase.error());
  //     return;
  // }
  //   else  Serial.print("number to ");
  //       Serial.println(Firebase.getInt("number"));
  //
  //       if (irrecv.decode(&results)) {
  //          Serial.println("Someone is going out from the house");
  //          a = 111;
  //          //Serial.println(Firebase.getInt("status"));
  //          //Serial.println(results.value, HEX);
  //          irrecv.resume(); // Receive the next value
  //        }
  //       else  {Serial.println("Still in the house");
  //             a = 000;
  //
  //       }Serial.println(a);
  // i++;
  if(sendok)
     {
        delay(10);
            // WiFiClient client;
            //   const int httpPort = 80;// to port to send the data
            //   if (!client.connect(host, httpPort)) {
            //     Serial.println("connection failed2");
            //     return;
            //   }

              //Serial.print("Requesting URL: ");

              // This will send the request to the server
            //   client.print(BPM);
              Serial.println(BPM);
              delay(100);
              sendok =false;
              flipper.attach_ms(2, Test);
     }

//////Screen
display.clear();
   display.setFont(Roboto_16);
   display.setTextAlignment(TEXT_ALIGN_CENTER_BOTH);
   display.drawString(DISPLAY_WIDTH/2, DISPLAY_HEIGHT/2 - 10, "Heart Rate : "+ String(BPM)+"\n"+getTime());
//   display.drawString(0, 0, "Heart Rate : "+ String(BPM)+"\n"+getTime()+"\nHello Puri");
   display.display();

//   Serial.println(getTime());

//////////

  // Firebase.setInt("HB", BPM);
  delay(1000);
}

void sendtcp()
{


}

String getTimeAndDate() {
  WiFiClient client;
  while (!!!client.connect("google.com", 80)) {
    Serial.println("connection failed, retrying...");
  }

  client.print("HEAD / HTTP/1.1\r\n\r\n");
  while(!!!client.available()) {
     yield();
  }

  while(client.available()){
    if (client.read() == '\n') {
      if (client.read() == 'D') {
        if (client.read() == 'a') {
          if (client.read() == 't') {
            if (client.read() == 'e') {
              if (client.read() == ':') {
                client.read();
                String theDate = client.readStringUntil('\r');
                client.stop();
                return theDate;
              }
            }
          }
        }
      }
    }
  }
}

String getTime(){

  String datetime = getTimeAndDate();
  String engtime = datetime.substring(17,25);

  String engtimearr[3];
  String hours = "00";
  hours[0] = engtime[0];
  hours[1] = engtime[1];
  
  engtimearr[0] = String(hours.toInt()+7);
  engtimearr[1] = engtime.substring(3,5);
  engtimearr[2] = engtime.substring(6,8);

  return engtimearr[0]+":"+engtimearr[1]+":"+engtimearr[2];
  
  }



int count = 0;
void Test(){
  count++;
  if(count ==1000)
  {
    flipper.detach();
    count =0;
    //sendtcp();
    sendok=true;

  }

      Signal = analogRead(A0);              // read the Pulse Sensor
        sampleCounter += 2;                         // keep track of the time in mS with this variable
    int N = sampleCounter - lastBeatTime;       // monitor the time since the last beat to avoid noise

      if(Signal < thresh && N > (IBI/5)*3){       // avoid dichrotic noise by waiting 3/5 of last IBI
        if (Signal < T){                        // T is the trough
            T = Signal;                         // keep track of lowest point in pulse wave
         }
       }

    if(Signal > thresh && Signal > P){          // thresh condition helps avoid noise
        P = Signal;                             // P is the peak
       }                                        // keep track of highest point in pulse wave

  //  NOW IT'S TIME TO LOOK FOR THE HEART BEAT
  // signal surges up in value every time there is a pulse
if (N > 250){                                   // avoid high frequency noise
  if ( (Signal > thresh) && (Pulse == false) && (N > (IBI/5)*3) ){
    Pulse = true;                               // set the Pulse flag when we think there is a pulse
    //digitalWrite(blinkPin,HIGH);                // turn on pin 13 LED
    IBI = sampleCounter - lastBeatTime;         // measure time between beats in mS
    lastBeatTime = sampleCounter;               // keep track of time for next pulse

         if(firstBeat){                         // if it's the first time we found a beat, if firstBeat == TRUE
             firstBeat = false;                 // clear firstBeat flag
             return;                            // IBI value is unreliable so discard it
            }
         if(secondBeat){                        // if this is the second beat, if secondBeat == TRUE
            secondBeat = false;                 // clear secondBeat flag
               for(int i=0; i<=maxAvgSample-1; i++){         // seed the running total to get a realisitic BPM at startup
                    rate[i] = IBI;
                    }
            }

    // keep a running total of the last 10 IBI values
    word runningTotal = 0;                   // clear the runningTotal variable

    for(int i=0; i<=(maxAvgSample-2); i++){                // shift data in the rate array
          rate[i] = rate[i+1];              // and drop the oldest IBI value
          runningTotal += rate[i];          // add up the 9 oldest IBI values
        }

    rate[maxAvgSample-1] = IBI;                          // add the latest IBI to the rate array
    runningTotal += rate[maxAvgSample-1];                // add the latest IBI to runningTotal
    runningTotal /= maxAvgSample;                     // average the last 10 IBI values
    BPM = 60000/runningTotal;               // how many beats can fit into a minute? that's BPM!
    QS = true;                              // set Quantified Self flag
    // QS FLAG IS NOT CLEARED INSIDE THIS ISR
    }
}

  if (Signal < thresh && Pulse == true){     // when the values are going down, the beat is over
      //digitalWrite(blinkPin,LOW);            // turn off pin 13 LED
      Pulse = false;                         // reset the Pulse flag so we can do it again
      amp = P - T;                           // get amplitude of the pulse wave
      thresh = amp/2 + T;                    // set thresh at 50% of the amplitude
      P = thresh;                            // reset these for next time
      T = thresh;
     }

  if (N > 2500){                             // if 2.5 seconds go by without a beat
      thresh = 512;                          // set thresh default
      P = 512;                               // set P default
      T = 512;                               // set T default
      lastBeatTime = sampleCounter;          // bring the lastBeatTime up to date
      firstBeat = true;                      // set these to avoid noise
      secondBeat = true;                     // when we get the heartbeat back
     }

  //sei();                                     // enable interrupts when youre done!
}// end isr

